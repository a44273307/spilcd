C51 COMPILER V9.05   LCD                                                                   05/07/2023 00:38:50 PAGE 1   


C51 COMPILER V9.05, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN lcd.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE lcd.c LARGE BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "lcd.h"
   2          
   3          #include "lcdfont.h"
   4          
   5          
   6          
   7          
   8          
   9          void SPI_RW(unsigned char byte)
  10          {
  11   1              SPDAT = byte;                           //??????
  12   1        while (!(SPSTAT & 0x80));               //??????
  13   1        SPSTAT = 0xc0;                          //?????
  14   1              
  15   1      //      for(bit_ctr=0;bit_ctr<8;bit_ctr++) // 输出8位
  16   1      //      {
  17   1      //              LCD_SCK=0;
  18   1      //              LCD_MOSI=(byte&0x80); // MSB TO MOSI
  19   1      //              byte=(byte<<1); // shift next bit to MSB
  20   1      //              LCD_SCK=1;
  21   1      //              byte|=LCD_MISO;         // capture current MISO bit
  22   1      //      }
  23   1      //      return byte;
  24   1              
  25   1      }
  26          
  27          
  28          void Delay1ms()         //@12.000MHz
  29          {
  30   1              unsigned char i, j;
  31   1      
  32   1              i = 12;
  33   1              j = 169;
  34   1              do
  35   1              {
  36   2                      while (--j);
  37   2              } while (--i);
  38   1      }
  39          
  40          void delay_ms(unsigned int ms)
  41          {
  42   1              while(ms--)
  43   1              {
  44   2                      Delay1ms();
  45   2              }
  46   1      }
  47          void LCD_CD_DATA(unsigned char val)
  48          {
  49   1              LCD_CS=0;
  50   1              LCD_CD=1;
  51   1              SPI_RW(val);
  52   1              LCD_CS=1;
  53   1      }
  54          
  55          void LCD_CD_REG(unsigned char reg)
C51 COMPILER V9.05   LCD                                                                   05/07/2023 00:38:50 PAGE 2   

  56          {
  57   1              LCD_CS=0;
  58   1              LCD_CD=0;
  59   1              SPI_RW(reg);
  60   1              LCD_CS=1;
  61   1      }
  62          int USE_HORIZONTAL=0;
  63          void LCD_Init()
  64          {
  65   1              LCD_RESET=0;
  66   1              delay_ms(10);
  67   1              LCD_RESET=1;
  68   1              delay_ms(120);
  69   1              LCD_CD_REG(0xCF);  
  70   1              LCD_CD_DATA(0x00); 
  71   1              LCD_CD_DATA(0xC1); 
  72   1              LCD_CD_DATA(0X30); 
  73   1              LCD_CD_REG(0xED);  
  74   1              LCD_CD_DATA(0x64); 
  75   1              LCD_CD_DATA(0x03); 
  76   1              LCD_CD_DATA(0X12); 
  77   1              LCD_CD_DATA(0X81); 
  78   1              LCD_CD_REG(0xE8);  
  79   1              LCD_CD_DATA(0x85); 
  80   1              LCD_CD_DATA(0x10); 
  81   1              LCD_CD_DATA(0x7A); 
  82   1              LCD_CD_REG(0xCB);  
  83   1              LCD_CD_DATA(0x39); 
  84   1              LCD_CD_DATA(0x2C); 
  85   1              LCD_CD_DATA(0x00); 
  86   1              LCD_CD_DATA(0x34); 
  87   1              LCD_CD_DATA(0x02); 
  88   1              LCD_CD_REG(0xF7);  
  89   1              LCD_CD_DATA(0x20); 
  90   1              LCD_CD_REG(0xEA);  
  91   1              LCD_CD_DATA(0x00); 
  92   1              LCD_CD_DATA(0x00); 
  93   1              LCD_CD_REG(0xC0);    //Power control 
  94   1              LCD_CD_DATA(0x1B);   //VRH[5:0] 
  95   1              LCD_CD_REG(0xC1);    //Power control 
  96   1              LCD_CD_DATA(0x01);   //SAP[2:0];BT[3:0] 
  97   1              LCD_CD_REG(0xC5);    //VCM control 
  98   1              LCD_CD_DATA(0x30);       //3F
  99   1              LCD_CD_DATA(0x30);       //3C
 100   1              LCD_CD_REG(0xC7);    //VCM control2 
 101   1              LCD_CD_DATA(0XB7); 
 102   1              LCD_CD_REG(0x36);    // Memory Access Control 
 103   1              LCD_CD_DATA(0x0C+0x80+0x20); 
 104   1              LCD_CD_REG(0x3A);   
 105   1              LCD_CD_DATA(0x55); 
 106   1              LCD_CD_REG(0xB1);   
 107   1              LCD_CD_DATA(0x00);   
 108   1              LCD_CD_DATA(0x1A); 
 109   1              LCD_CD_REG(0xB6);    // Display Function Control 
 110   1              LCD_CD_DATA(0x0A); 
 111   1              LCD_CD_DATA(0xA2); 
 112   1              LCD_CD_REG(0xF2);    // 3Gamma Function Disable 
 113   1              LCD_CD_DATA(0x00); 
 114   1              LCD_CD_REG(0x26);    //Gamma curve selected 
 115   1              LCD_CD_DATA(0x01); 
 116   1              LCD_CD_REG(0xE0);    //Set Gamma 
 117   1              LCD_CD_DATA(0x0F); 
C51 COMPILER V9.05   LCD                                                                   05/07/2023 00:38:50 PAGE 3   

 118   1              LCD_CD_DATA(0x2A); 
 119   1              LCD_CD_DATA(0x28); 
 120   1              LCD_CD_DATA(0x08); 
 121   1              LCD_CD_DATA(0x0E); 
 122   1              LCD_CD_DATA(0x08); 
 123   1              LCD_CD_DATA(0x54); 
 124   1              LCD_CD_DATA(0XA9); 
 125   1              LCD_CD_DATA(0x43); 
 126   1              LCD_CD_DATA(0x0A); 
 127   1              LCD_CD_DATA(0x0F); 
 128   1              LCD_CD_DATA(0x00); 
 129   1              LCD_CD_DATA(0x00); 
 130   1              LCD_CD_DATA(0x00); 
 131   1              LCD_CD_DATA(0x00);               
 132   1              LCD_CD_REG(0XE1);    //Set Gamma 
 133   1              LCD_CD_DATA(0x00); 
 134   1              LCD_CD_DATA(0x15); 
 135   1              LCD_CD_DATA(0x17); 
 136   1              LCD_CD_DATA(0x07); 
 137   1              LCD_CD_DATA(0x11); 
 138   1              LCD_CD_DATA(0x06); 
 139   1              LCD_CD_DATA(0x2B); 
 140   1              LCD_CD_DATA(0x56); 
 141   1              LCD_CD_DATA(0x3C); 
 142   1              LCD_CD_DATA(0x05); 
 143   1              LCD_CD_DATA(0x10); 
 144   1              LCD_CD_DATA(0x0F); 
 145   1              LCD_CD_DATA(0x3F); 
 146   1              LCD_CD_DATA(0x3F); 
 147   1              LCD_CD_DATA(0x0F); 
 148   1              LCD_CD_REG(0x2B); 
 149   1              LCD_CD_DATA(0x00);
 150   1              LCD_CD_DATA(0x00);
 151   1              LCD_CD_DATA(0x01);
 152   1              LCD_CD_DATA(0x3f);
 153   1              LCD_CD_REG(0x2A); 
 154   1              LCD_CD_DATA(0x00);
 155   1              LCD_CD_DATA(0x00);
 156   1              LCD_CD_DATA(0x00);
 157   1              LCD_CD_DATA(0xef);       
 158   1              LCD_CD_REG(0x11); //Exit Sleep
 159   1              delay_ms(120);
 160   1              LCD_CD_REG(0x29); //display on  
 161   1      }
 162          
 163          void LCD_SetArea(unsigned int stx,unsigned int sty,unsigned int endx,unsigned int endy)
 164          {
 165   1              LCD_CD_REG(0x2A);  
 166   1              LCD_CD_DATA(stx>>8);    
 167   1              LCD_CD_DATA(stx&0xff);          
 168   1              LCD_CD_DATA(endx>>8); 
 169   1              LCD_CD_DATA(endx&0xff); 
 170   1      
 171   1              LCD_CD_REG(0x2B);
 172   1              LCD_CD_DATA(sty>>8); 
 173   1              LCD_CD_DATA(sty&0xff);  
 174   1              LCD_CD_DATA(endy>>8); 
 175   1              LCD_CD_DATA(endy&0xff); 
 176   1      }
 177          
 178          void LcdWirteColorData(unsigned int color)
 179          {
C51 COMPILER V9.05   LCD                                                                   05/07/2023 00:38:50 PAGE 4   

 180   1              LCD_CS=0;
 181   1              LCD_CD=1;
 182   1              SPI_RW(color>>8);
 183   1              SPI_RW(color&0xff);
 184   1              LCD_CS=1;
 185   1      }
 186          
 187          void LCD_Clear(unsigned int color)
 188          {  
 189   1              unsigned int i,j;
 190   1      
 191   1              LCD_SetArea(0,0,239,319);
 192   1        LCD_CD_REG(0x2C);
 193   1              for(i=0;i<320;i++)
 194   1              {
 195   2                      for(j=0;j<240;j++)
 196   2                      {
 197   3                              LcdWirteColorData(color);
 198   3                      }
 199   2              }
 200   1      }
 201          
 202          
 203          
 204          
 205          /******************************************************************************
 206                函数说明：LCD写入命令
 207                入口数据：dat 写入的命令
 208                返回值：  无
 209          ******************************************************************************/
 210          void LCD_WR_REG(u8 dat)
 211          {
 212   1              LCD_CD_REG(dat);
 213   1      }
 214          
 215          /******************************************************************************
 216                函数说明：设置起始和结束地址
 217                入口数据：x1,x2 设置列的起始和结束地址
 218                          y1,y2 设置行的起始和结束地址
 219                返回值：  无
 220          ******************************************************************************/
 221          void LCD_Address_Set(u16 x1,u16 y1,u16 x2,u16 y2)
 222          {
 223   1              LCD_SetArea(x1,y1,x2,y2);
 224   1      }
 225          /******************************************************************************
 226                函数说明：LCD写入数据
 227                入口数据：dat 写入的数据
 228                返回值：  无
 229          ******************************************************************************/
 230          void LCD_WR_DATA8(u8 dat)
 231          {
 232   1              LCD_CD_DATA(dat);
 233   1      }
 234          /******************************************************************************
 235                函数说明：LCD写入数据
 236                入口数据：dat 写入的数据
 237                返回值：  无
 238          ******************************************************************************/
 239          void LCD_WR_DATA(u16 dat)
 240          {
 241   1              LcdWirteColorData(dat);
C51 COMPILER V9.05   LCD                                                                   05/07/2023 00:38:50 PAGE 5   

 242   1      }
 243          /******************************************************************************
 244                函数说明：在指定区域填充颜色
 245                入口数据：xsta,ysta   起始坐标
 246                          xend,yend   终止坐标
 247                                                                          color       要填充的颜色
 248                返回值：  无
 249          ******************************************************************************/
 250          void LCD_Fill(u16 xsta,u16 ysta,u16 xend,u16 yend,u16 color)
 251          {          
 252   1              u16 i,j; 
 253   1              LCD_Address_Set(xsta,ysta,xend-1,yend-1);//设置显示范围
 254   1              for(i=ysta;i<yend;i++)
 255   1              {                                                                                                                       
 256   2                      for(j=xsta;j<xend;j++)
 257   2                      {
 258   3                              LCD_WR_DATA(color);
 259   3                      }
 260   2              }                                                   
 261   1      }
 262          
 263          /******************************************************************************
 264                函数说明：在指定位置画点
 265                入口数据：x,y 画点坐标
 266                          color 点的颜色
 267                返回值：  无
 268          ******************************************************************************/
 269          void LCD_DrawPoint(u16 x,u16 y,u16 color)
 270          {
 271   1              LCD_Address_Set(x,y,x,y);//设置光标位置 
 272   1              LCD_WR_DATA(color);
 273   1      } 
 274          
 275          
 276          /******************************************************************************
 277                函数说明：画线
 278                入口数据：x1,y1   起始坐标
 279                          x2,y2   终止坐标
 280                          color   线的颜色
 281                返回值：  无
 282          ******************************************************************************/
 283          void LCD_DrawLine(u16 x1,u16 y1,u16 x2,u16 y2,u16 color)
 284          {
 285   1              u16 t; 
 286   1              int xerr=0,yerr=0,delta_x,delta_y,distance;
 287   1              int incx,incy,uRow,uCol;
 288   1              delta_x=x2-x1; //计算坐标增量 
 289   1              delta_y=y2-y1;
 290   1              uRow=x1;//画线起点坐标
 291   1              uCol=y1;
 292   1              if(delta_x>0)incx=1; //设置单步方向 
 293   1              else if (delta_x==0)incx=0;//垂直线 
 294   1              else {incx=-1;delta_x=-delta_x;}
 295   1              if(delta_y>0)incy=1;
 296   1              else if (delta_y==0)incy=0;//水平线 
 297   1              else {incy=-1;delta_y=-delta_y;}
 298   1              if(delta_x>delta_y)distance=delta_x; //选取基本增量坐标轴 
 299   1              else distance=delta_y;
 300   1              for(t=0;t<distance+1;t++)
 301   1              {
 302   2                      LCD_DrawPoint(uRow,uCol,color);//画点
 303   2                      xerr+=delta_x;
C51 COMPILER V9.05   LCD                                                                   05/07/2023 00:38:50 PAGE 6   

 304   2                      yerr+=delta_y;
 305   2                      if(xerr>distance)
 306   2                      {
 307   3                              xerr-=distance;
 308   3                              uRow+=incx;
 309   3                      }
 310   2                      if(yerr>distance)
 311   2                      {
 312   3                              yerr-=distance;
 313   3                              uCol+=incy;
 314   3                      }
 315   2              }
 316   1      }
 317          
 318          
 319          /******************************************************************************
 320                函数说明：画矩形
 321                入口数据：x1,y1   起始坐标
 322                          x2,y2   终止坐标
 323                          color   矩形的颜色
 324                返回值：  无
 325          ******************************************************************************/
 326          void LCD_DrawRectangle(u16 x1, u16 y1, u16 x2, u16 y2,u16 color)
 327          {
 328   1              LCD_DrawLine(x1,y1,x2,y1,color);
 329   1              LCD_DrawLine(x1,y1,x1,y2,color);
 330   1              LCD_DrawLine(x1,y2,x2,y2,color);
 331   1              LCD_DrawLine(x2,y1,x2,y2,color);
 332   1      }
 333          
 334          
 335          /******************************************************************************
 336                函数说明：画圆
 337                入口数据：x0,y0   圆心坐标
 338                          r       半径
 339                          color   圆的颜色
 340                返回值：  无
 341          ******************************************************************************/
 342          void Draw_Circle(u16 x0,u16 y0,u8 r,u16 color)
 343          {
 344   1              int a,b;
 345   1              a=0;b=r;          
 346   1              while(a<=b)
 347   1              {
 348   2                      LCD_DrawPoint(x0-b,y0-a,color);             //3           
 349   2                      LCD_DrawPoint(x0+b,y0-a,color);             //0           
 350   2                      LCD_DrawPoint(x0-a,y0+b,color);             //1                
 351   2                      LCD_DrawPoint(x0-a,y0-b,color);             //2             
 352   2                      LCD_DrawPoint(x0+b,y0+a,color);             //4               
 353   2                      LCD_DrawPoint(x0+a,y0-b,color);             //5
 354   2                      LCD_DrawPoint(x0+a,y0+b,color);             //6 
 355   2                      LCD_DrawPoint(x0-b,y0+a,color);             //7
 356   2                      a++;
 357   2                      if((a*a+b*b)>(r*r))//判断要画的点是否过远
 358   2                      {
 359   3                              b--;
 360   3                      }
 361   2              }
 362   1      }
 363          
 364          
 365          
C51 COMPILER V9.05   LCD                                                                   05/07/2023 00:38:50 PAGE 7   

 366          
 367          /******************************************************************************
 368                函数说明：显示单个字符
 369                入口数据：x,y显示坐标
 370                          num 要显示的字符
 371                          fc 字的颜色
 372                          bc 字的背景色
 373                          sizey 字号
 374                          mode:  0非叠加模式  1叠加模式
 375                返回值：  无
 376          ******************************************************************************/
 377          void LCD_ShowChar(u16 x,u16 y,u8 num,u16 fc,u16 bc,u8 sizey,u8 mode)
 378          {
 379   1              u8 temp,sizex,t,m=0;
 380   1              u16 i,TypefaceNum;//一个字符所占字节大小
 381   1              u16 x0=x;
 382   1              sizex=sizey/2;
 383   1              TypefaceNum=(sizex/8+((sizex%8)?1:0))*sizey;
 384   1              num=num-' ';    //得到偏移后的值
 385   1              LCD_SetArea(x,y,x+sizex-1,y+sizey-1);  //设置光标位置 
 386   1              LCD_CD_REG(0x2C);
 387   1              for(i=0;i<TypefaceNum;i++)
 388   1              { 
 389   2                      if(sizey==12)temp=ascii_1206[num][i];                  //调用6x12字体
 390   2                      else if(sizey==16)temp=ascii_1608[num][i];               //调用8x16字体
 391   2                      else if(sizey==24)temp=ascii_2412[num][i];               //调用12x24字体
 392   2                      else if(sizey==32)temp=ascii_3216[num][i];               //调用16x32字体
 393   2                      else return;
 394   2                      for(t=0;t<8;t++)
 395   2                      {
 396   3                              if(!mode)//非叠加模式
 397   3                              {
 398   4                                      if(temp&(0x01<<t))LCD_WR_DATA(fc);
 399   4                                      else LCD_WR_DATA(bc);
 400   4                                      m++;
 401   4                                      if(m%sizex==0)
 402   4                                      {
 403   5                                              m=0;
 404   5                                              break;
 405   5                                      }
 406   4                              }
 407   3                              else//叠加模式
 408   3                              {
 409   4                                      if(temp&(0x01<<t))LCD_DrawPoint(x,y,fc);//画一个点
 410   4                                      x++;
 411   4                                      if((x-x0)==sizex)
 412   4                                      {
 413   5                                              x=x0;
 414   5                                              y++;
 415   5                                              break;
 416   5                                      }
 417   4                              }
 418   3                      }
 419   2              }                 
 420   1      }
 421          
 422          
 423          /******************************************************************************
 424                函数说明：显示字符串
 425                入口数据：x,y显示坐标
 426                          *p 要显示的字符串
 427                          fc 字的颜色
C51 COMPILER V9.05   LCD                                                                   05/07/2023 00:38:50 PAGE 8   

 428                          bc 字的背景色
 429                          sizey 字号
 430                          mode:  0非叠加模式  1叠加模式
 431                返回值：  无
 432          ******************************************************************************/
 433          void LCD_ShowString(u16 x,u16 y,const u8 *p,u16 fc,u16 bc,u8 sizey,u8 mode)
 434          {         
 435   1              while(*p!='\0')
 436   1              {       
 437   2                      LCD_ShowChar(x,y,*p,fc,bc,sizey,mode);
 438   2                      x+=sizey/2;
 439   2                      p++;
 440   2              }  
 441   1      }
 442          
 443          
 444          /******************************************************************************
 445                函数说明：显示数字
 446                入口数据：m底数，n指数
 447                返回值：  无
 448          ******************************************************************************/
 449          u32 mypow(u8 m,u8 n)
 450          {
 451   1              u32 result=1;    
 452   1              while(n--)result*=m;
 453   1              return result;
 454   1      }
 455          
 456          
 457          /******************************************************************************
 458                函数说明：显示整数变量
 459                入口数据：x,y显示坐标
 460                          num 要显示整数变量
 461                          len 要显示的位数
 462                          fc 字的颜色
 463                          bc 字的背景色
 464                          sizey 字号
 465                返回值：  无
 466          ******************************************************************************/
 467          void LCD_ShowIntNum(u16 x,u16 y,u16 num,u8 len,u16 fc,u16 bc,u8 sizey)
 468          {               
 469   1              u8 t,temp;
 470   1              u8 enshow=0;
 471   1              u8 sizex=sizey/2;
 472   1              for(t=0;t<len;t++)
 473   1              {
 474   2                      temp=(num/mypow(10,len-t-1))%10;
 475   2                      if(enshow==0&&t<(len-1))
 476   2                      {
 477   3                              if(temp==0)
 478   3                              {
 479   4                                      LCD_ShowChar(x+t*sizex,y,' ',fc,bc,sizey,0);
 480   4                                      continue;
 481   4                              }else enshow=1; 
 482   3                               
 483   3                      }
 484   2                      LCD_ShowChar(x+t*sizex,y,temp+48,fc,bc,sizey,0);
 485   2              }
 486   1      } 
 487          
 488          
 489          /******************************************************************************
C51 COMPILER V9.05   LCD                                                                   05/07/2023 00:38:50 PAGE 9   

 490                函数说明：显示两位小数变量
 491                入口数据：x,y显示坐标
 492                          num 要显示小数变量
 493                          len 要显示的位数
 494                          fc 字的颜色
 495                          bc 字的背景色
 496                          sizey 字号
 497                返回值：  无
 498          ******************************************************************************/
 499          void LCD_ShowFloatNum1(u16 x,u16 y,float num,u8 len,u16 fc,u16 bc,u8 sizey)
 500          {               
 501   1              u8 t,temp,sizex;
 502   1              u16 num1;
 503   1              sizex=sizey/2;
 504   1              num1=num*100;
 505   1              for(t=0;t<len;t++)
 506   1              {
 507   2                      temp=(num1/mypow(10,len-t-1))%10;
 508   2                      if(t==(len-2))
 509   2                      {
 510   3                              LCD_ShowChar(x+(len-2)*sizex,y,'.',fc,bc,sizey,0);
 511   3                              t++;
 512   3                              len+=1;
 513   3                      }
 514   2                      LCD_ShowChar(x+t*sizex,y,temp+48,fc,bc,sizey,0);
 515   2              }
 516   1      }
 517          
 518          
 519          /******************************************************************************
 520                函数说明：显示图片
 521                入口数据：x,y起点坐标
 522                          length 图片长度
 523                          width  图片宽度
 524                          pic[]  图片数组    
 525                返回值：  无
 526          ******************************************************************************/
 527          void LCD_ShowPicture(u16 x,u16 y,u16 length,u16 width,const u8 pic[])
 528          {
 529   1              u16 i,j;
 530   1              u32 k=0;
 531   1              LCD_Address_Set(x,y,x+length-1,y+width-1);
 532   1              for(i=0;i<length;i++)
 533   1              {
 534   2                      for(j=0;j<width;j++)
 535   2                      {
 536   3                              LCD_WR_DATA8(pic[k*2]);
 537   3                              LCD_WR_DATA8(pic[k*2+1]);
 538   3                              k++;
 539   3                      }
 540   2              }                       
 541   1      }
 542          
 543          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   3840    ----
   CONSTANT SIZE    =  13300    ----
   XDATA SIZE       =      2     182
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
C51 COMPILER V9.05   LCD                                                                   05/07/2023 00:38:50 PAGE 10  

   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
