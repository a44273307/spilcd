C51 COMPILER V9.05   LCD                                                                   05/09/2023 00:59:06 PAGE 1   


C51 COMPILER V9.05, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN lcd.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE lcd.c LARGE BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "lcd.h"
   2          
   3          #include "lcdfont.h"
   4          #include          <intrins.h>
   5          
   6                           
   7          
   8          
   9          void SPI_RW(unsigned char byte)
  10          {
  11   1              SPDAT = byte;                           //??????
  12   1        while (!(SPSTAT & 0x80));               //??????
  13   1        SPSTAT = 0xc0;                          //?????
  14   1              
  15   1      //      for(bit_ctr=0;bit_ctr<8;bit_ctr++) // 输出8位
  16   1      //      {
  17   1      //              LCD_SCK=0;
  18   1      //              LCD_MOSI=(byte&0x80); // MSB TO MOSI
  19   1      //              byte=(byte<<1); // shift next bit to MSB
  20   1      //              LCD_SCK=1;
  21   1      //              byte|=LCD_MISO;         // capture current MISO bit
  22   1      //      }
  23   1      //      return byte;
  24   1              
  25   1      }
  26          
  27          
  28          void Delay1ms()         //@24.000MHz
  29          {
  30   1              unsigned char i, j;
  31   1      
  32   1              _nop_();
  33   1              i = 32;
  34   1              j = 40;
  35   1              do
  36   1              {
  37   2                      while (--j);
  38   2              } while (--i);
  39   1      }
  40          
  41          void delay_ms(unsigned int ms)
  42          {
  43   1              while(ms--)
  44   1              {
  45   2                      Delay1ms();
  46   2              }
  47   1      }
  48          void LCD_CD_DATA(unsigned char val)
  49          {
  50   1              LCD_CS=0;
  51   1              LCD_CD=1;
  52   1              SPI_RW(val);
  53   1              LCD_CS=1;
  54   1      }
  55          
C51 COMPILER V9.05   LCD                                                                   05/09/2023 00:59:06 PAGE 2   

  56          void LCD_CD_REG(unsigned char reg)
  57          {
  58   1              LCD_CS=0;
  59   1              LCD_CD=0;
  60   1              SPI_RW(reg);
  61   1              LCD_CS=1;
  62   1      }
  63          int USE_HORIZONTAL=0;
  64          void LCD_Init()
  65          {
  66   1              LCD_RESET=0;
  67   1              delay_ms(10);
  68   1              LCD_RESET=1;
  69   1              delay_ms(120);
  70   1              LCD_CD_REG(0xCF);  
  71   1              LCD_CD_DATA(0x00); 
  72   1              LCD_CD_DATA(0xC1); 
  73   1              LCD_CD_DATA(0X30); 
  74   1              LCD_CD_REG(0xED);  
  75   1              LCD_CD_DATA(0x64); 
  76   1              LCD_CD_DATA(0x03); 
  77   1              LCD_CD_DATA(0X12); 
  78   1              LCD_CD_DATA(0X81); 
  79   1              LCD_CD_REG(0xE8);  
  80   1              LCD_CD_DATA(0x85); 
  81   1              LCD_CD_DATA(0x10); 
  82   1              LCD_CD_DATA(0x7A); 
  83   1              LCD_CD_REG(0xCB);  
  84   1              LCD_CD_DATA(0x39); 
  85   1              LCD_CD_DATA(0x2C); 
  86   1              LCD_CD_DATA(0x00); 
  87   1              LCD_CD_DATA(0x34); 
  88   1              LCD_CD_DATA(0x02); 
  89   1              LCD_CD_REG(0xF7);  
  90   1              LCD_CD_DATA(0x20); 
  91   1              LCD_CD_REG(0xEA);  
  92   1              LCD_CD_DATA(0x00); 
  93   1              LCD_CD_DATA(0x00); 
  94   1              LCD_CD_REG(0xC0);    //Power control 
  95   1              LCD_CD_DATA(0x1B);   //VRH[5:0] 
  96   1              LCD_CD_REG(0xC1);    //Power control 
  97   1              LCD_CD_DATA(0x01);   //SAP[2:0];BT[3:0] 
  98   1              LCD_CD_REG(0xC5);    //VCM control 
  99   1              LCD_CD_DATA(0x30);       //3F
 100   1              LCD_CD_DATA(0x30);       //3C
 101   1              LCD_CD_REG(0xC7);    //VCM control2 
 102   1              LCD_CD_DATA(0XB7); 
 103   1              LCD_CD_REG(0x36);    // Memory Access Control 
 104   1              LCD_CD_DATA(0x0C+0x80+0x20); 
 105   1              LCD_CD_REG(0x3A);   
 106   1              LCD_CD_DATA(0x55); 
 107   1              LCD_CD_REG(0xB1);   
 108   1              LCD_CD_DATA(0x00);   
 109   1              LCD_CD_DATA(0x1A); 
 110   1              LCD_CD_REG(0xB6);    // Display Function Control 
 111   1              LCD_CD_DATA(0x0A); 
 112   1              LCD_CD_DATA(0xA2); 
 113   1              LCD_CD_REG(0xF2);    // 3Gamma Function Disable 
 114   1              LCD_CD_DATA(0x00); 
 115   1              LCD_CD_REG(0x26);    //Gamma curve selected 
 116   1              LCD_CD_DATA(0x01); 
 117   1              LCD_CD_REG(0xE0);    //Set Gamma 
C51 COMPILER V9.05   LCD                                                                   05/09/2023 00:59:06 PAGE 3   

 118   1              LCD_CD_DATA(0x0F); 
 119   1              LCD_CD_DATA(0x2A); 
 120   1              LCD_CD_DATA(0x28); 
 121   1              LCD_CD_DATA(0x08); 
 122   1              LCD_CD_DATA(0x0E); 
 123   1              LCD_CD_DATA(0x08); 
 124   1              LCD_CD_DATA(0x54); 
 125   1              LCD_CD_DATA(0XA9); 
 126   1              LCD_CD_DATA(0x43); 
 127   1              LCD_CD_DATA(0x0A); 
 128   1              LCD_CD_DATA(0x0F); 
 129   1              LCD_CD_DATA(0x00); 
 130   1              LCD_CD_DATA(0x00); 
 131   1              LCD_CD_DATA(0x00); 
 132   1              LCD_CD_DATA(0x00);               
 133   1              LCD_CD_REG(0XE1);    //Set Gamma 
 134   1              LCD_CD_DATA(0x00); 
 135   1              LCD_CD_DATA(0x15); 
 136   1              LCD_CD_DATA(0x17); 
 137   1              LCD_CD_DATA(0x07); 
 138   1              LCD_CD_DATA(0x11); 
 139   1              LCD_CD_DATA(0x06); 
 140   1              LCD_CD_DATA(0x2B); 
 141   1              LCD_CD_DATA(0x56); 
 142   1              LCD_CD_DATA(0x3C); 
 143   1              LCD_CD_DATA(0x05); 
 144   1              LCD_CD_DATA(0x10); 
 145   1              LCD_CD_DATA(0x0F); 
 146   1              LCD_CD_DATA(0x3F); 
 147   1              LCD_CD_DATA(0x3F); 
 148   1              LCD_CD_DATA(0x0F); 
 149   1              LCD_CD_REG(0x2B); 
 150   1              LCD_CD_DATA(0x00);
 151   1              LCD_CD_DATA(0x00);
 152   1              LCD_CD_DATA(0x01);
 153   1              LCD_CD_DATA(0x3f);
 154   1              LCD_CD_REG(0x2A); 
 155   1              LCD_CD_DATA(0x00);
 156   1              LCD_CD_DATA(0x00);
 157   1              LCD_CD_DATA(0x00);
 158   1              LCD_CD_DATA(0xef);       
 159   1              LCD_CD_REG(0x11); //Exit Sleep
 160   1              delay_ms(120);
 161   1              LCD_CD_REG(0x29); //display on  
 162   1      }
 163          
 164          void LCD_SetArea(unsigned int stx,unsigned int sty,unsigned int endx,unsigned int endy)
 165          {
 166   1              LCD_CD_REG(0x2A);  
 167   1              LCD_CD_DATA(stx>>8);    
 168   1              LCD_CD_DATA(stx&0xff);          
 169   1              LCD_CD_DATA(endx>>8); 
 170   1              LCD_CD_DATA(endx&0xff); 
 171   1      
 172   1              LCD_CD_REG(0x2B);
 173   1              LCD_CD_DATA(sty>>8); 
 174   1              LCD_CD_DATA(sty&0xff);  
 175   1              LCD_CD_DATA(endy>>8); 
 176   1              LCD_CD_DATA(endy&0xff); 
 177   1      }
 178          
 179          void LcdWirteColorData(unsigned int color)
C51 COMPILER V9.05   LCD                                                                   05/09/2023 00:59:06 PAGE 4   

 180          {
 181   1              LCD_CS=0;
 182   1              LCD_CD=1;
 183   1              SPI_RW(color>>8);
 184   1              SPI_RW(color&0xff);
 185   1              LCD_CS=1;
 186   1      }
 187          
 188          void LCD_Clear(unsigned int color)
 189          {  
 190   1              unsigned int i,j;
 191   1      
 192   1              LCD_SetArea(0,0,239,319);
 193   1        LCD_CD_REG(0x2C);
 194   1              for(i=0;i<320;i++)
 195   1              {
 196   2                      for(j=0;j<240;j++)
 197   2                      {
 198   3                              LcdWirteColorData(color);
 199   3                      }
 200   2              }
 201   1      }
 202          
 203          
 204          
 205          
 206          /******************************************************************************
 207                函数说明：LCD写入命令
 208                入口数据：dat 写入的命令
 209                返回值：  无
 210          ******************************************************************************/
 211          void LCD_WR_REG(u8 dat)
 212          {
 213   1              LCD_CD_REG(dat);
 214   1      }
 215          
 216          /******************************************************************************
 217                函数说明：设置起始和结束地址
 218                入口数据：x1,x2 设置列的起始和结束地址
 219                          y1,y2 设置行的起始和结束地址
 220                返回值：  无
 221          ******************************************************************************/
 222          void LCD_Address_Set(u16 x1,u16 y1,u16 x2,u16 y2)
 223          {
 224   1              LCD_SetArea(x1,y1,x2,y2);
 225   1      }
 226          /******************************************************************************
 227                函数说明：LCD写入数据
 228                入口数据：dat 写入的数据
 229                返回值：  无
 230          ******************************************************************************/
 231          void LCD_WR_DATA8(u8 dat)
 232          {
 233   1              LCD_CD_DATA(dat);
 234   1      }
 235          /******************************************************************************
 236                函数说明：LCD写入数据
 237                入口数据：dat 写入的数据
 238                返回值：  无
 239          ******************************************************************************/
 240          void LCD_WR_DATA(u16 dat)
 241          {
C51 COMPILER V9.05   LCD                                                                   05/09/2023 00:59:06 PAGE 5   

 242   1              LcdWirteColorData(dat);
 243   1      }
 244          /******************************************************************************
 245                函数说明：在指定区域填充颜色
 246                入口数据：xsta,ysta   起始坐标
 247                          xend,yend   终止坐标
 248                                                                          color       要填充的颜色
 249                返回值：  无
 250          ******************************************************************************/
 251          void LCD_Fill(u16 xsta,u16 ysta,u16 xend,u16 yend,u16 color)
 252          {          
 253   1              u16 i,j; 
 254   1              LCD_Address_Set(xsta,ysta,xend-1,yend-1);//设置显示范围
 255   1              for(i=ysta;i<yend;i++)
 256   1              {                                                                                                                       
 257   2                      for(j=xsta;j<xend;j++)
 258   2                      {
 259   3                              LCD_WR_DATA(color);
 260   3                      }
 261   2              }                                                   
 262   1      }
 263          
 264          /******************************************************************************
 265                函数说明：在指定位置画点
 266                入口数据：x,y 画点坐标
 267                          color 点的颜色
 268                返回值：  无
 269          ******************************************************************************/
 270          void LCD_DrawPoint(u16 x,u16 y,u16 color)
 271          {
 272   1              LCD_Address_Set(x,y,x,y);//设置光标位置 
 273   1              LCD_WR_DATA(color);
 274   1      } 
 275          
 276          
 277          /******************************************************************************
 278                函数说明：画线
 279                入口数据：x1,y1   起始坐标
 280                          x2,y2   终止坐标
 281                          color   线的颜色
 282                返回值：  无
 283          ******************************************************************************/
 284          void LCD_DrawLine(u16 x1,u16 y1,u16 x2,u16 y2,u16 color)
 285          {
 286   1              u16 t; 
 287   1              int xerr=0,yerr=0,delta_x,delta_y,distance;
 288   1              int incx,incy,uRow,uCol;
 289   1              delta_x=x2-x1; //计算坐标增量 
 290   1              delta_y=y2-y1;
 291   1              uRow=x1;//画线起点坐标
 292   1              uCol=y1;
 293   1              if(delta_x>0)incx=1; //设置单步方向 
 294   1              else if (delta_x==0)incx=0;//垂直线 
 295   1              else {incx=-1;delta_x=-delta_x;}
 296   1              if(delta_y>0)incy=1;
 297   1              else if (delta_y==0)incy=0;//水平线 
 298   1              else {incy=-1;delta_y=-delta_y;}
 299   1              if(delta_x>delta_y)distance=delta_x; //选取基本增量坐标轴 
 300   1              else distance=delta_y;
 301   1              for(t=0;t<distance+1;t++)
 302   1              {
 303   2                      LCD_DrawPoint(uRow,uCol,color);//画点
C51 COMPILER V9.05   LCD                                                                   05/09/2023 00:59:06 PAGE 6   

 304   2                      xerr+=delta_x;
 305   2                      yerr+=delta_y;
 306   2                      if(xerr>distance)
 307   2                      {
 308   3                              xerr-=distance;
 309   3                              uRow+=incx;
 310   3                      }
 311   2                      if(yerr>distance)
 312   2                      {
 313   3                              yerr-=distance;
 314   3                              uCol+=incy;
 315   3                      }
 316   2              }
 317   1      }
 318          
 319          
 320          /******************************************************************************
 321                函数说明：画矩形
 322                入口数据：x1,y1   起始坐标
 323                          x2,y2   终止坐标
 324                          color   矩形的颜色
 325                返回值：  无
 326          ******************************************************************************/
 327          void LCD_DrawRectangle(u16 x1, u16 y1, u16 x2, u16 y2,u16 color)
 328          {
 329   1              LCD_DrawLine(x1,y1,x2,y1,color);
 330   1              LCD_DrawLine(x1,y1,x1,y2,color);
 331   1              LCD_DrawLine(x1,y2,x2,y2,color);
 332   1              LCD_DrawLine(x2,y1,x2,y2,color);
 333   1      }
 334          
 335          
 336          /******************************************************************************
 337                函数说明：画圆
 338                入口数据：x0,y0   圆心坐标
 339                          r       半径
 340                          color   圆的颜色
 341                返回值：  无
 342          ******************************************************************************/
 343          void Draw_Circle(u16 x0,u16 y0,u8 r,u16 color)
 344          {
 345   1              int a,b;
 346   1              a=0;b=r;          
 347   1              while(a<=b)
 348   1              {
 349   2                      LCD_DrawPoint(x0-b,y0-a,color);             //3           
 350   2                      LCD_DrawPoint(x0+b,y0-a,color);             //0           
 351   2                      LCD_DrawPoint(x0-a,y0+b,color);             //1                
 352   2                      LCD_DrawPoint(x0-a,y0-b,color);             //2             
 353   2                      LCD_DrawPoint(x0+b,y0+a,color);             //4               
 354   2                      LCD_DrawPoint(x0+a,y0-b,color);             //5
 355   2                      LCD_DrawPoint(x0+a,y0+b,color);             //6 
 356   2                      LCD_DrawPoint(x0-b,y0+a,color);             //7
 357   2                      a++;
 358   2                      if((a*a+b*b)>(r*r))//判断要画的点是否过远
 359   2                      {
 360   3                              b--;
 361   3                      }
 362   2              }
 363   1      }
 364          
 365          
C51 COMPILER V9.05   LCD                                                                   05/09/2023 00:59:06 PAGE 7   

 366          
 367          
 368          /******************************************************************************
 369                函数说明：显示单个字符
 370                入口数据：x,y显示坐标
 371                          num 要显示的字符
 372                          fc 字的颜色
 373                          bc 字的背景色
 374                          sizey 字号
 375                          mode:  0非叠加模式  1叠加模式
 376                返回值：  无
 377          ******************************************************************************/
 378          void LCD_ShowChar(u16 x,u16 y,u8 num,u16 fc,u16 bc,u8 sizey,u8 mode)
 379          {
 380   1              u8 temp,sizex,t,m=0;
 381   1              u16 i,TypefaceNum;//一个字符所占字节大小
 382   1              u16 x0=x;
 383   1              sizex=sizey/2;
 384   1              TypefaceNum=(sizex/8+((sizex%8)?1:0))*sizey;
 385   1              num=num-' ';    //得到偏移后的值
 386   1              LCD_SetArea(x,y,x+sizex-1,y+sizey-1);  //设置光标位置 
 387   1              LCD_CD_REG(0x2C);
 388   1              for(i=0;i<TypefaceNum;i++)
 389   1              { 
 390   2                      if(sizey==12)temp=ascii_1206[num][i];                  //调用6x12字体
 391   2                      else if(sizey==16)temp=ascii_1608[num][i];               //调用8x16字体
 392   2                      else if(sizey==24)temp=ascii_2412[num][i];               //调用12x24字体
 393   2                      else if(sizey==32)temp=ascii_3216[num][i];               //调用16x32字体
 394   2                      else return;
 395   2                      for(t=0;t<8;t++)
 396   2                      {
 397   3                              if(!mode)//非叠加模式
 398   3                              {
 399   4                                      if(temp&(0x01<<t))LCD_WR_DATA(fc);
 400   4                                      else LCD_WR_DATA(bc);
 401   4                                      m++;
 402   4                                      if(m%sizex==0)
 403   4                                      {
 404   5                                              m=0;
 405   5                                              break;
 406   5                                      }
 407   4                              }
 408   3                              else//叠加模式
 409   3                              {
 410   4                                      if(temp&(0x01<<t))LCD_DrawPoint(x,y,fc);//画一个点
 411   4                                      x++;
 412   4                                      if((x-x0)==sizex)
 413   4                                      {
 414   5                                              x=x0;
 415   5                                              y++;
 416   5                                              break;
 417   5                                      }
 418   4                              }
 419   3                      }
 420   2              }                 
 421   1      }
 422          
 423          
 424          /******************************************************************************
 425                函数说明：显示字符串
 426                入口数据：x,y显示坐标
 427                          *p 要显示的字符串
C51 COMPILER V9.05   LCD                                                                   05/09/2023 00:59:06 PAGE 8   

 428                          fc 字的颜色
 429                          bc 字的背景色
 430                          sizey 字号
 431                          mode:  0非叠加模式  1叠加模式
 432                返回值：  无
 433          ******************************************************************************/
 434          void LCD_ShowString(u16 x,u16 y,const u8 *p,u16 fc,u16 bc,u8 sizey,u8 mode)
 435          {         
 436   1              while(*p!='\0')
 437   1              {       
 438   2                      LCD_ShowChar(x,y,*p,fc,bc,sizey,mode);
 439   2                      x+=sizey/2;
 440   2                      p++;
 441   2              }  
 442   1      }
 443          
 444          
 445          /******************************************************************************
 446                函数说明：显示数字
 447                入口数据：m底数，n指数
 448                返回值：  无
 449          ******************************************************************************/
 450          u32 mypow(u8 m,u8 n)
 451          {
 452   1              u32 result=1;    
 453   1              while(n--)result*=m;
 454   1              return result;
 455   1      }
 456          
 457          
 458          /******************************************************************************
 459                函数说明：显示整数变量
 460                入口数据：x,y显示坐标
 461                          num 要显示整数变量
 462                          len 要显示的位数
 463                          fc 字的颜色
 464                          bc 字的背景色
 465                          sizey 字号
 466                返回值：  无
 467          ******************************************************************************/
 468          void LCD_ShowIntNum(u16 x,u16 y,u16 num,u8 len,u16 fc,u16 bc,u8 sizey)
 469          {               
 470   1              u8 t,temp;
 471   1              u8 enshow=0;
 472   1              u8 sizex=sizey/2;
 473   1              for(t=0;t<len;t++)
 474   1              {
 475   2                      temp=(num/mypow(10,len-t-1))%10;
 476   2                      if(enshow==0&&t<(len-1))
 477   2                      {
 478   3                              if(temp==0)
 479   3                              {
 480   4                                      LCD_ShowChar(x+t*sizex,y,' ',fc,bc,sizey,0);
 481   4                                      continue;
 482   4                              }else enshow=1; 
 483   3                               
 484   3                      }
 485   2                      LCD_ShowChar(x+t*sizex,y,temp+48,fc,bc,sizey,0);
 486   2              }
 487   1      } 
 488          
 489          
C51 COMPILER V9.05   LCD                                                                   05/09/2023 00:59:06 PAGE 9   

 490          /******************************************************************************
 491                函数说明：显示两位小数变量
 492                入口数据：x,y显示坐标
 493                          num 要显示小数变量
 494                          len 要显示的位数
 495                          fc 字的颜色
 496                          bc 字的背景色
 497                          sizey 字号
 498                返回值：  无
 499          ******************************************************************************/
 500          void LCD_ShowFloatNum1(u16 x,u16 y,float num,u8 len,u16 fc,u16 bc,u8 sizey)
 501          {               
 502   1              u8 t,temp,sizex;
 503   1              u16 num1;
 504   1              sizex=sizey/2;
 505   1              num1=num*100;
 506   1              for(t=0;t<len;t++)
 507   1              {
 508   2                      temp=(num1/mypow(10,len-t-1))%10;
 509   2                      if(t==(len-2))
 510   2                      {
 511   3                              LCD_ShowChar(x+(len-2)*sizex,y,'.',fc,bc,sizey,0);
 512   3                              t++;
 513   3                              len+=1;
 514   3                      }
 515   2                      LCD_ShowChar(x+t*sizex,y,temp+48,fc,bc,sizey,0);
 516   2              }
 517   1      }
 518          
 519          
 520          /******************************************************************************
 521                函数说明：显示图片
 522                入口数据：x,y起点坐标
 523                          length 图片长度
 524                          width  图片宽度
 525                          pic[]  图片数组    
 526                返回值：  无
 527          ******************************************************************************/
 528          void LCD_ShowPicture(u16 x,u16 y,u16 length,u16 width,const u8 pic[])
 529          {
 530   1              u16 i,j;
 531   1              u32 k=0;
 532   1              LCD_Address_Set(x,y,x+length-1,y+width-1);
 533   1              LCD_CD_REG(0x2C);
 534   1              for(i=0;i<length;i++)
 535   1              {
 536   2                      for(j=0;j<width;j++)
 537   2                      {
 538   3                              LCD_WR_DATA8(pic[k*2]);
 539   3                              LCD_WR_DATA8(pic[k*2+1]);
 540   3                              k++;
 541   3                      }
 542   2              }                       
 543   1      }
 544          
 545          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   3846    ----
   CONSTANT SIZE    =  13300    ----
   XDATA SIZE       =      2     182
C51 COMPILER V9.05   LCD                                                                   05/09/2023 00:59:06 PAGE 10  

   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
